fpr2 <- ggplot(full_regret_plt2, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr1 <- fpr1 + ylim(c(0, 1e10))
pgrid2 <- cowplot::plot_grid(fpr1 + theme(legend.position = "none") + xlab("") + scale_y_log10(),
fpr2 + theme(legend.position = "none") + xlab("") + scale_y_log10(), nrow = 2, ncol = 1,
labels = "AUTO", align = "v")
legend_b <- get_legend(fpr1 + theme(legend.position="bottom"))
p <- plot_grid( pgrid2, legend_b, ncol = 1, rel_heights = c(1, .075))
p
full_regret_plt1 <- bind_cols(
"Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/3,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
full_regret_plt2 <- bind_cols(
# "Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/3,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
fpr1 <- ggplot(full_regret_plt1, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr2 <- ggplot(full_regret_plt2, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr1 <- fpr1 + ylim(c(0, 1e10))
pgrid2 <- cowplot::plot_grid(fpr1 + theme(legend.position = "none") + xlab("") + scale_y_log10(),
fpr2 + theme(legend.position = "none") + xlab("") + scale_y_log10(), nrow = 2, ncol = 1,
labels = "AUTO", align = "v")
legend_b <- get_legend(fpr1 + theme(legend.position="bottom"))
p <- plot_grid( pgrid2, legend_b, ncol = 1, rel_heights = c(1, .075))
p
full_regret_plt1 <- bind_cols(
"Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
full_regret_plt2 <- bind_cols(
# "Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
fpr1 <- ggplot(full_regret_plt1, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr2 <- ggplot(full_regret_plt2, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr1 <- fpr1 + ylim(c(0, 1e10))
pgrid2 <- cowplot::plot_grid(fpr1 + theme(legend.position = "none") + xlab("") + scale_y_log10(),
fpr2 + theme(legend.position = "none") + xlab("") + scale_y_log10(), nrow = 2, ncol = 1,
labels = "AUTO", align = "v")
legend_b <- get_legend(fpr1 + theme(legend.position="bottom"))
p <- plot_grid( pgrid2, legend_b, ncol = 1, rel_heights = c(1, .075))
p
epsilon <- 750
repetitions <- 3
exp_losses     <- matrix(0, ncol = epsilon, nrow = repetitions)
gd_losses      <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses     <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_std <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_idea <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_idea2 <- matrix(0, ncol = epsilon, nrow = repetitions)
saol_losses <- matrix(0, ncol = epsilon, nrow = repetitions)
saol_losses2 <- matrix(0, ncol = epsilon, nrow = repetitions)
for (j in 1:repetitions) {
cat(j, "/", repetitions, "\n")
# SAOL_losses <- numeric(epsilon)
# ada_fpl_losses <- numeric(100)
# gd_ada_regret  <- numeric(100)
# ada_ada_regret <- numeric(100)
# ada_std_ada_regret <- numeric(100)
corr_idx       <- NULL
corrupted_data <- base_data
for (i in seq(epsilon)) {
# if (i %% 100 == 0) {
cat(j, "/", repetitions, "--", i, "/", epsilon, "\n")
# }
corrupted_data <- corrupt_data( #corrupt_data(
corrupted_data,
function() mvrnorm(n = 1, rep(3, 2), Sigma), corr_idx)#c(rexp(1, .75), rt(1, 1, 5)), corr_idx)
corr_idx <- corrupted_data[[2]]
corrupted_data <- corrupted_data[[1]]
modelmat <- cbind(1, corrupted_data$x)
exp_losses[i] <- sum(((
model.matrix(y~x, base_data[-corr_idx, ]) %*% coef(
lm(y~x, base_data[-corr_idx, ])) - base_data$y[-corr_idx]))^2)
gd_loss <- standard_gd(cbind(1, 1), corrupted_data, modelmat)
ada_loss <- adaptive_gd(corrupted_data, modelmat)
# ada_std_loss <- adaptive_gd(corrupted_data, modelmat)
ada_loss_idea <- ada_new(corrupted_data, modelmat)
# saol_loss <- saol(corrupted_data, modelmat)
saol_loss2 <- saol(corrupted_data, modelmat, real = TRUE)
# ada_loss_idea2 <- adaptive_gd(corrupted_data, modelmat, idea = TRUE)
# ada_fpl_loss <- adaptive_gd(corrupted_data, modelmat, practical = FALSE, fpl = TRUE)
# SAOL_loss <- SAOL(corrupted_data, modelmat)
gd_losses[j, i]       <- sum(gd_loss[-corr_idx])
ada_losses[i]         <- sum(ada_loss[-corr_idx])
ada_losses_idea[j, i] <- sum(ada_loss_idea[-corr_idx])
# ada_losses_std[j, i]<- sum(ada_std_loss[-corr_idx])
# saol_losses[j, i]   <- sum(saol_loss[-corr_idx])
saol_losses2[j, i]    <- sum(saol_loss2[-corr_idx])
# ada_losses_idea2[i] <- sum(ada_loss_idea2[-corr_idx])
# SAOL_losses[i] <- sum(SAOL_loss[-corr_idx])
# ada_fpl_losses[i] <- sum(ada_fpl_loss[-corr_idx])
# ada_interval <- get_ada_intervals(corr_idx)
# gd_ada_regret[i]  <- get_ada_regret(ada_interval, gd_loss)
# ada_ada_regret[i] <- get_ada_regret(ada_interval, ada_loss)
# ada_std_ada_regret[i] <- get_ada_regret(ada_interval, ada_std_loss)
}
}
(
(
(
gd_losses1 <- colMeans(gd_losses)
saol_losses1 <- colMeans(saol_losses2)
ada_losses_idea <- colMeans(ada_losses_idea)
gd_losses1 <- colMeans(gd_losses)
saol_losses1 <- colMeans(saol_losses2)
ada_losses_idea <- colMeans(ada_losses_idea)
ada_losses_std1 <- colMeans(ada_losses)
ada_losses_std1 <- colMeans(ada_losses)
ada_losses_idea <- colMeans(ada_losses_idea)
ada_losses_idea
dim(ada_losses_idea)
ada_losses_idea <- mean(ada_losses_idea)
ada_losses_std1 <- colMeans(ada_losses)
full_regret_plt1 <- bind_cols(
"Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
length(ada_losses_idea)
epsilon <- 750
repetitions <- 3
exp_losses     <- matrix(0, ncol = epsilon, nrow = repetitions)
gd_losses      <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses     <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_std <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_idea <- matrix(0, ncol = epsilon, nrow = repetitions)
ada_losses_idea2 <- matrix(0, ncol = epsilon, nrow = repetitions)
saol_losses <- matrix(0, ncol = epsilon, nrow = repetitions)
saol_losses2 <- matrix(0, ncol = epsilon, nrow = repetitions)
for (j in 1:repetitions) {
cat(j, "/", repetitions, "\n")
# SAOL_losses <- numeric(epsilon)
# ada_fpl_losses <- numeric(100)
# gd_ada_regret  <- numeric(100)
# ada_ada_regret <- numeric(100)
# ada_std_ada_regret <- numeric(100)
corr_idx       <- NULL
corrupted_data <- base_data
for (i in seq(epsilon)) {
# if (i %% 100 == 0) {
cat(j, "/", repetitions, "--", i, "/", epsilon, "\n")
# }
corrupted_data <- corrupt_data( #corrupt_data(
corrupted_data,
function() mvrnorm(n = 1, rep(3, 2), Sigma), corr_idx)#c(rexp(1, .75), rt(1, 1, 5)), corr_idx)
corr_idx <- corrupted_data[[2]]
corrupted_data <- corrupted_data[[1]]
modelmat <- cbind(1, corrupted_data$x)
exp_losses[i] <- sum(((
model.matrix(y~x, base_data[-corr_idx, ]) %*% coef(
lm(y~x, base_data[-corr_idx, ])) - base_data$y[-corr_idx]))^2)
gd_loss <- standard_gd(cbind(1, 1), corrupted_data, modelmat)
ada_loss <- adaptive_gd(corrupted_data, modelmat)
# ada_std_loss <- adaptive_gd(corrupted_data, modelmat)
ada_loss_idea <- ada_new(corrupted_data, modelmat)
# saol_loss <- saol(corrupted_data, modelmat)
saol_loss2 <- saol(corrupted_data, modelmat, real = TRUE)
# ada_loss_idea2 <- adaptive_gd(corrupted_data, modelmat, idea = TRUE)
# ada_fpl_loss <- adaptive_gd(corrupted_data, modelmat, practical = FALSE, fpl = TRUE)
# SAOL_loss <- SAOL(corrupted_data, modelmat)
gd_losses[j, i]       <- sum(gd_loss[-corr_idx])
ada_losses[i]         <- sum(ada_loss[-corr_idx])
ada_losses_idea[j, i] <- sum(ada_loss_idea[-corr_idx])
# ada_losses_std[j, i]<- sum(ada_std_loss[-corr_idx])
# saol_losses[j, i]   <- sum(saol_loss[-corr_idx])
saol_losses2[j, i]    <- sum(saol_loss2[-corr_idx])
# ada_losses_idea2[i] <- sum(ada_loss_idea2[-corr_idx])
# SAOL_losses[i] <- sum(SAOL_loss[-corr_idx])
# ada_fpl_losses[i] <- sum(ada_fpl_loss[-corr_idx])
# ada_interval <- get_ada_intervals(corr_idx)
# gd_ada_regret[i]  <- get_ada_regret(ada_interval, gd_loss)
# ada_ada_regret[i] <- get_ada_regret(ada_interval, ada_loss)
# ada_std_ada_regret[i] <- get_ada_regret(ada_interval, ada_std_loss)
}
}
gd_losses1 <- colMeans(gd_losses)
saol_losses1 <- colMeans(saol_losses2)
ada_losses_idea1 <- mean(ada_losses_idea)
ada_losses_std1 <- colMeans(ada_losses)
full_regret_plt1 <- bind_cols(
"Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea1/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
ada_losses_idea1 <- colMeans(ada_losses_idea)
full_regret_plt1 <- bind_cols(
"Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea1/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
full_regret_plt2 <- bind_cols(
# "Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
full_regret_plt2 <- bind_cols(
# "Base Learner"  = gd_losses1,
"SAOL (8)" = saol_losses1/10,
# "Expert Tracking" = ada_losses_idea2,
"AMW (6)" = ada_losses_idea1/2.5,
"FLH (7)" = ada_losses_std1) %>%
# mutate_all(~ .x - exp_losses) %>%
mutate_all(~ .x / sqrt(seq(n - epsilon, 1))) %>%
mutate(frac = seq(epsilon) / n) %>%
gather(alg, regret, -frac)
fpr1 <- ggplot(full_regret_plt1, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr2 <- ggplot(full_regret_plt2, aes(x = frac, y = regret, color = alg)) +
geom_line(lwd=1) +
labs(y = "Robust Regret", x = "Fraction of Outliers") +
scale_colour_manual(
values = c(
"Base Learner" = "#8975ca", "SAOL (8)" =  "#71a659", "AMW (6)" = "#cb5683", "FLH (7)" = "#c5783e"),
name = "Algorithm")
fpr1 <- fpr1 + ylim(c(0, 1e10))
pgrid2 <- cowplot::plot_grid(fpr1 + theme(legend.position = "none") + xlab("") + scale_y_log10(),
fpr2 + theme(legend.position = "none") + xlab("") + scale_y_log10(), nrow = 2, ncol = 1,
labels = "AUTO", align = "v")
legend_b <- get_legend(fpr1 + theme(legend.position="bottom"))
p <- plot_grid( pgrid2, legend_b, ncol = 1, rel_heights = c(1, .075))
p
ada_losses_std1
setwd("D:/onedrive/gghalves")
getwd()
setwd("D:/onedrive/gghalves")
setwd("D:/onedrive/github/gghalves")
usethis::use_vignette("Using gghalves")
usethis::use_vignette("gghalves")
library(gghalves)
install.packages("gghalves")
library(gghalves)
rm(GeomHalfPoint)
rm(geom_half_point())
rm(geom_half_point
)
library(gghalves)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_point()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation_params = list(height = 0, width = 0))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation = PositionIdentity)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation = ggbeeswarm:::PositionQuasirandom,
transformation_params = formals(ggbeeswarm:::PositionQuasirandom))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation = ggbeeswarm:::PositionQuasirandom,
transformation_params = formals(ggbeeswarm::position_quasirandom))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation_params = list(height = 0, width = 0, seed = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation_params = list(height = 0, width = 0.01, seed = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation_params = list(height = 0, width = 0.001, seed = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_point(transformation_params = list(height = 0, width = 0.0001, seed = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot(side = "r", center = TRUE, errorbar.draw = FALSE)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
geom_dotplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
geom_dotplot(method="histodot", stackdir="down")
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
geom_dotplot(method="histodot", stackdir="up")
ggplot(iris, aes(x = Species, y = Sepal.Width))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_dotplot(method="histodot", stackdir="up")
ggplot(data = iris, aes(x = Species, y = Sepal.Width)) +
geom_dotplot()
ggplot(data = iris, aes(x = Species, y = Sepal.Width)) +
geom_dotplot(binaxis = "y")
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up")
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up")
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up")
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_half_dotplot(binaxis = "y", method="histodot", stackdir="up")
df <- data.frame(score = rgamma(150, 4, 1),
gender = sample(c("M", "F"), 150, replace = TRUE),
genotype = factor(sample(1:3, 150, replace = TRUE)))
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_half_dotplot(binaxis = "y", method="histodot", stackdir="up")
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up")
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_half_dotplot(method="histodot", stackdir="up")
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up", position = PositionDodge)
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up", position = PositionDodge2)
ggplot(df, aes(x = genotype, y = score, fill = gender)) +
geom_half_violin() +
geom_dotplot(binaxis = "y", method="histodot", stackdir="up", position = PositionDodge)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 0))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = -1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_violin() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 2))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 2))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
devtools::install_github("eclarke/ggbeeswarm")
ggplot() + geom_beeswarm(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), beeswarmArgs=list(side=+1)
)
ggplot() + ggbeeswarm::geom_beeswarm(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), beeswarmArgs=list(side=+1)
)
library(tidyverse)
ggplot() + ggbeeswarm::geom_beeswarm(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), beeswarmArgs=list(side=+1)
)
devtools::install_github("eclarke/ggbeeswarm", force=T)
ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm(beeswarmArgs=list(side=1))
library(ggbeeswarm)
ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm(beeswarmArgs=list(side=1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot() +
geom_half_boxplot(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species), outlier.color = NA) +
geom_beeswarm(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), beeswarmArgs=list(side=+1)
) +
geom_half_violin(
data = iris %>% filter(Species=="versicolor"),
aes(x = Species, y = Sepal.Length, fill = Species), side="r") +
geom_half_dotplot(
data = iris %>% filter(Species=="versicolor"),
aes(x = Species, y = Sepal.Length, fill = Species), method="histodot", stackdir="down") +
geom_half_boxplot(
data = iris %>% filter(Species=="virginica"),
aes(x = Species, y = Sepal.Length, fill = Species), side = "r", errorbar.draw = TRUE,
outlier.color = NA) +
geom_half_point(
data = iris %>% filter(Species=="virginica"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), side = "l") +
scale_fill_manual(values = c("setosa" = "#cba1d2", "versicolor"="#7067CF","virginica"="#B7C0EE")) +
scale_color_manual(values = c("setosa" = "#cba1d2", "versicolor"="#7067CF","virginica"="#B7C0EE")) +
theme(legend.position = "none")
ggplot(iris, aes(x = Species, y = Sepal.Width)) + geom_blank()
ggplot(iris, aes(x = Species, y = Sepal.Width)) + geom_boxplot()
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
library(gghalves)
library(tidyverse)
ggplot() +
geom_half_boxplot(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species), outlier.color = NA) +
ggbeeswarm::geom_beeswarm(
data = iris %>% filter(Species=="setosa"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), beeswarmArgs=list(side=+1)
) +
geom_half_violin(
data = iris %>% filter(Species=="versicolor"),
aes(x = Species, y = Sepal.Length, fill = Species), side="r") +
geom_half_dotplot(
data = iris %>% filter(Species=="versicolor"),
aes(x = Species, y = Sepal.Length, fill = Species), method="histodot", stackdir="down") +
geom_half_boxplot(
data = iris %>% filter(Species=="virginica"),
aes(x = Species, y = Sepal.Length, fill = Species), side = "r", errorbar.draw = TRUE,
outlier.color = NA) +
geom_half_point(
data = iris %>% filter(Species=="virginica"),
aes(x = Species, y = Sepal.Length, fill = Species, color = Species), side = "l") +
scale_fill_manual(values = c("setosa" = "#cba1d2", "versicolor"="#7067CF","virginica"="#B7C0EE")) +
scale_color_manual(values = c("setosa" = "#cba1d2", "versicolor"="#7067CF","virginica"="#B7C0EE")) +
theme(legend.position = "none")
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm(beeswarmArgs=list(side=1))
ggplot(iris,aes(Species, Sepal.Length)) + ggbeeswarm::geom_beeswarm(beeswarmArgs=list(side=1))
library(ggbeeswarm)
ggplot(iris,aes(Species, Sepal.Length)) + geom_beeswarm(beeswarmArgs=list(side=1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_half_boxplot() +
ggbeeswarm::geom_beeswarm(beeswarmArgs = list(side = 1))
install.packages("reprex")
reprex()
library(reprex)
reprex()
